This document is for specifying and demonstrating the format restrictions on the constraints within a Swellix configuration file.
For this example, we'll be using the same 14 nucleotide sample sequence which was our focus in the README file. Specifically, we'll use the version of the sequence which had chemically modified nuceleotides to restrict pairing possibilities.

As a refresher, our sequence was 'GCUCU"AAAKAGAG'. The '"' and the 'K' are our modified nucleotides, and the first step is always to obtain the "unmodified" sequence. This just means replacing the symbols for the modified nucleotides with the corresponding symbols for the unmodified nucleotides.
So, the sequence that we want to provide to Swellix looks like this: 'GCUCUAAAAGAGAG'.

Next, we need to translate the pairing constraints (if any) to Swellix.

For now, the syntax for pairing constraints consist of three key phrases: "S1 PAIRING", "V1 PAIRING", and "COVARIANCE".

S1 PAIRING is used to denote a list of indices which identify nuceleotides which MUST NOT pair.
V1 PAIRING is used to denote the opposite of S1: indices of nucleotides which MUST pair.
And COVARIANCE constraints list ordered pairs indicating pairs of nucleotides which must pair with each other.

For our example, we are assuming that the chemical modifications prohibit pairing of the respective nucleotides, so we will create a config file using the S1 PAIRING indicator.

The first step is always the same as for a normal sequence input file: enter the sequence on the first line of the file.

So, the first line will be:

GCUCUAAAAGAGAG

Next, on a new line below the sequence, specify the type of pairing constraint using square brackets and the necessary key word/phrase. In our case, it is [S1 PAIRING]. Then, for each nucleotide to be constrained, enter the index surrounded by parentheses. So, the pairing constraint section for our test sequence will look like this:

[S1 PAIRING]
( 6 )
( 10 )

A few notes: the current implementation in Swellix requires there be no spaces between the brackets and the keyword. Inversely, it is strictly required that there be spaces between the parentheses and the index. This will be made more flexible in a future revision.


So, our complete config file would look like this:

GCUCUAAAAGAGAG
[S1 PAIRING]
( 6 )
( 10 )

This is a simple example, and you could easily have more complicated constraint variations. If you want to add constraints of more than one type to your sequence, you can separate the different types of constraints by a line of underscores.

For example, for some arbitrary sequence that had constraints of all three types, you could have something looking like this:

[V1 PAIRING]
( 5 )
( 24 )
( 340 )
___________
[S1 PAIRING]
( 2 )
( 56 )
( 100 )
___________
[COVARIANCE]
( 20 , 79 )
( 134 , 300 )


The number of underscores is not strict. Only one is required on the line separating the constraints. However, you can write it as shown to make it more pleasing to human eyes.

If you enter your constraints and receive output that is obviously erroneous or the program crashes, make sure that the formatting is correct first. If the error persists and you don't want to troubleshoot it yourself, contact us with the bug description and we'll work to fix it and update the code.
